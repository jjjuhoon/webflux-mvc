#version: 0.2
#
#phases:
#  pre_build:
#    commands:
#      - echo Executing Gradle build...
#      - ./gradlew clean build # gradle에 맞게 변경
#      #      - mvn clean install
#      - echo Logging in to Amazon ECR...
#      - aws --version
#      - REPOSITORY_URI=014498628412.dkr.ecr.ap-northeast-2.amazonaws.com/helloworld-registry
#      - aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin $REPOSITORY_URI
#      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
#      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
#  build:
#    commands:
#      - echo Build started on `date`
#      - echo Building the Docker image...
#      - docker build -t $REPOSITORY_URI:latest .
#      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
#  post_build:
#    commands:
#      - echo Build completed on `date`
#      - echo Pushing the Docker images...
#      - docker push $REPOSITORY_URI:latest
#      - docker push $REPOSITORY_URI:$IMAGE_TAG
#      - echo Writing image definitions file...
#      - printf '[{"name":"course-service","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
#      - echo Writing image definitions file...
#      # add your container name
#      - DOCKER_CONTAINER_NAME=helloworld-registry
#      - printf '[{"name":"%s","imageUri":"%s"}]' $DOCKER_CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
#      - echo $DOCKER_CONTAINER_NAME
#      - echo printing imagedefinitions.json
#      - cat imagedefinitions.json
#
#artifacts:
#  files:
#    - imagedefinitions.json
#    - build/libs/*.jar  # 생성된 JAR 파일 위치